Title of the problem is: Injection Vulnerability. Here is the description of the problem: The base URL is constructed using a variable, which could be manipulated if not properly sanitized, leading to potential injection attacks.
And here are the codes where this problem is appearing:
backend/ai71_client.py:

load_dotenv()

AI71_API_KEY = os.getenv("AI71_API_KEY")
AI71_BASE_URL = os.getenv("AI71_BASE_URL")

class AI71Client:
    def __init__(self):
        self.api_key = AI71_API_KEY
        self.base_url = AI71_BASE_URL

    def chat_completion(self, messages):
        headers = {
            "Authorization": f"Bearer {self.api_key}",
            "Content-Type": "application/json"
        }
        
        data = {
            "model": "tiiuae/falcon-180B-chat",
            "messages": messages,
            "stream": True,
            "max_tokens": 1280,
            "temperature": 0
        }

        response = requests.post(f"{self.base_url}chat/completions", headers=headers, json=data, stream=True)
        
        for line in response.iter_lines():
            if line:
                yield line.decode('utf-8')

